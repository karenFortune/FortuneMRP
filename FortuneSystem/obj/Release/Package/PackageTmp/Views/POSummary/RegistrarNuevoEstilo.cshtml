@model FortuneSystem.Models.POSummary.POSummary

<script src="~/Scripts/general/autocomplete.js"></script>
<script type="text/javascript">


    $(document).ready(function () {
        $(document).on("click", ".classAdd", function () {
            var rowCount = $('.data-Talla').length + 1;
            var tallasdiv = '<tr class="data-Talla">' +
                '<td class="mover"><span class="glyphicon glyphicon-fullscreen" aria-hidden="true"></span></td>' +
                '<td class="datoTalla"><input type="text"  name="f-talla" id="f-talla" class="form-control talla" autocomplete="off" /></td>' +
                '<td class="datoTalla"><input type="text" id="l-cantidad" name="l-cantidad" class="form-control l-name01 numCantTall"  /></td>' +
                '<td class="datoTalla"><input type="text" id="e-extras"  name="e-extras" class="form-control e-name01 numExtTall" value="' + 0 + '"/></td>' +
                '<td class="datoTalla"><input type="text" id="s-ejemplo" name="s-ejemplo" class="form-control s-name01 numEjmTall" value="' + 0 + '"/></td>' +
                '<td><button type="button" id="btnDelete" class="deleteTalla btn btn btn-danger btn-xs" value="4">Delete</button></td>' +
                '</tr>';
            $('#tablaTallas').append(tallasdiv);
        });

        $(document).on("click", ".deleteTalla", function () {
            $(this).closest("tr").remove();
        }); 
        $('#selectGenero').select2({
            dropdownParent: $("#nuevoEstiloModal"),
            placeholder: "Select a gender",
            language: {

                noResults: function () {

                    return "There is no result";
                },
                searching: function () {

                    return "Searching..";
                }
            }
		});

		
		//Desplazamiento
		$('.tbodyTallas').keydown(function (e) {
			var $table = $(this);
			var $active = $('input:focus,select:focus', $table);
			var $next = null;
			var focusableQuery = 'input:visible,select:visible,textarea:visible';
			var position = parseInt($active.closest('td').index()) + 1;
			console.log('position :', position);
			switch (e.keyCode) {
				case 37: // <Left>
					$next = $active.parent('td').prev().find(focusableQuery);
					break;
				case 38: // <Up>                    
					$next = $active
						.closest('tr')
						.prev()
						.find('td:nth-child(' + position + ')')
						.find(focusableQuery)
						;

					break;
				case 39: // <Right>
					$next = $active.closest('td').next().find(focusableQuery);
					break;
				case 40: // <Down>
					$next = $active
						.closest('tr')
						.next()
						.find('td:nth-child(' + position + ')')
						.find(focusableQuery)
						;
					break;
			}
			if ($next && $next.length) {
				$next.focus();
			}
		});

        $('#selectEspecialidad').select2({
            dropdownParent: $("#nuevoEstiloModal"),
            //placeholder: "Select a specialty",
            language: {
                noResults: function () {
                    return "There is no result";
                },
                searching: function () {
                    return "Searching..";
                }
            }
        });
        $("#selectEspecialidad").val('13');
        $("#selectEspecialidad").trigger('change');

        $('#selectTela').select2({
            dropdownParent: $("#nuevoEstiloModal"),
            placeholder: "Select a type of fabric",
            language: {

                noResults: function () {

                    return "There is no result";
                },
                searching: function () {

                    return "Searching..";
                }
            }
        });

        $("#selectTipoCamiseta").select2({
            dropdownParent: $("#nuevoEstiloModal"),
            placeholder: "Select a type of shirt",
            language: {

                noResults: function () {

                    return "There is no result";
                },
                searching: function () {

                    return "Searching..";
                }
            }
		});

		$("#selectFormPack").val('1');
        $("#selectFormPack").trigger('change');

		$("#selectFormPack").select2({
            //placeholder: "Select a specialty",
            dropdownParent: $("#nuevoEstiloModal"),
            language: {

                noResults: function () {

                    return "There is no result";
                },
                searching: function () {

                    return "Searching..";
                }
            }
        });

        //Autocomplete tallas
        $(function () {
            var list_datalist = Array();
            $.ajax({
                url: '/Tallas/Lista_Tallas',
                type: 'GET',
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        var html = "";
                        list_datalist.push(data[i].Talla);
                    }
                }
            })
            var availableTags = list_datalist;
            $(document).on("focus keyup", "input.talla", function (event) {
                $(this).autocomplete({
                    source: availableTags,
                    select: function (event, ui) {
                        event.preventDefault();
                        this.value = ui.item.label;
                    },
                    focus: function (event, ui) {
                        event.preventDefault();
                        this.value = ui.item.label;
                    }
                });
            });
        });


        var estilo = $("#ItemDescripcion_ItemEstilo").val();
        if (estilo != '') {
            $('#ItemDescripcion_Descripcion').val('');
            $("#nuevoEstilo").prop("disabled", false);
        }
            $('#nuevoColor').click(function (e) {
        var colorEstilo = $("#CatColores_CodigoColor").val();
        var colorDesc = $("#CatColores_DescripcionColor").val();
        $.ajax('@Url.Action("Registrarcolor", "Colores")', {
            data: { CodigoColor: colorEstilo, DescColor: colorDesc },
            method: 'post'
        }).done(function (data) {        });
                $("#nuevoColor").prop("disabled", true);
        alertify.set('notifier', 'position', 'top-right');
        alertify.notify('The color was registered correctly.', 'success', 10, null);
        });

        $('#nuevoEstilo').click(function (e) {
        var itemEstilo = $("#ItemDescripcion_ItemEstilo").val();
        var estiloDesc = $("#ItemDescripcion_Descripcion").val();
        $.ajax('@Url.Action("RegistrarEstilo", "Items")', {
            data: { ItemEstilo: itemEstilo, DescEstilo: estiloDesc },
            method: 'post'
        }).done(function (data) {
        });
            $("#nuevoEstilo").prop("disabled", true);
            alertify.set('notifier', 'position', 'top-right');
        alertify.notify('the style was registered correctly.', 'success', 10, null);
    });

       /* $("#ItemDescripcion_ItemEstilo,#CatColores_CodigoColor,#f-talla").on('input', function () {
            var val = this.value;
            this.value = val.replace(/[^A-Z\u00f1\u00d1\u0020\s\^0-9]/g, '');
        });*/
        $("#Cantidad").on('input', function () {
            var val = this.value;
            this.value = val.replace(/^[0-9]\./g, '');
        });

        $("#crearTallas").hide();
        $('#nuevoItem').click(function (e) {
            var error = 0;
            $(".nuevo_item").each(function () {
                error;
                var id = $(this).attr('id');
                if ($(this).val() == '') {
                    $("#" + id).css('border', '2px solid #e03f3f');
                    error++;

                } else {
                    $("#" + id).css('border', '1px solid #cccccc');
                }
            });
            if (error != 0) {
                var alert = alertify.alert("Mensaje", 'All fields are required.').set('label', 'Aceptar');
                alert.set({ transition: 'zoom' });
                alert.set('modal', false);
            } else {
                $("#nuevoItem").prop("disabled", true);
                $("#crearTallas").show();
                var EstiloItem = $("#ItemDescripcion_ItemEstilo").val();
                var IdColor = $("#CatColores_CodigoColor").val();
                var Cantidad = $("#CantidadT").val();
                var Precio = $("#Precio").val();
                var IdGenero = $("#selectGenero option:selected").val();
                var IdTela = $("#selectTela option:selected").val();
                var TipoCamiseta = $("#selectTipoCamiseta option:selected").val();
				var Especialidad = $("#selectEspecialidad option:selected").val();
				var TipoFormPack = $("#selectFormPack option:selected").val();
                $.ajax('@Url.Action("RegistrarItemsRev", "POSummary")', {
                    data: { EstiloItem: EstiloItem, IdColor: IdColor, Cantidad: Cantidad, Precio: Precio, IdGenero: IdGenero, TipoCamiseta: TipoCamiseta, IdTela: IdTela, IdEspecialidad: Especialidad, IdTipoFormPack: TipoFormPack },
                method: 'get',
                async: true,
                success: function (data) {

                },
            }).done(function(data) {

                    });
                alertify.set('notifier', 'position', 'top-right');
                alertify.notify('The style was registered correctly.', 'success', 10, null);
            }
        });

        var colorDesc = $("#CatColores_DescripcionColor").val();
        var colorEstilo = $("#CatColores_CodigoColor").val();

        $(function () {
            $('#selectGenero').change(function () {
                var text = $(this).find('option:selected').text();
                $.ajax('@Url.Action("List", "POSummary")', {
                data: { Genero: text},
                    method: 'GET',
                    success: function (result) {
                       var html = '';
						var cont = 0;
                        $.each(result, function (key, item) {
                            html += '<tr>';
                            html += '<td class="mover"><span class="glyphicon glyphicon-fullscreen" aria-hidden="true"></span></td>';
                            html += '<td class="datoTalla"><input type="text" id="f-talla" class="form-control talla" value="' + item.CatTallaItem.Talla + '"/></td>';
                            html += '<td class="datoTalla"><input type="text" name="l-cantidad" id="l-cantidad'+cont+'" class="form-control l-name01 numCantTall"  onblur="sumar(' + cont + ')" /></td>';
                            html += '<td class="datoTalla"><input type="text" name="e-extras" id="e-extras" class="form-control e-name01 numExtTall" value="' + 0 + '"/></td>';
                            html += '<td class="datoTalla"><input type="text" name="s-ejemplo" id="s-ejemplo'+cont+'" class="form-control s-name01 numEjmTall" onblur="sumarEjemplo(' + cont + ')" value="' + 0 + '"/></td>';
                            html += '<td><button type="button" id="btnDelete" class="deleteTalla btn btn btn-danger btn-xs" value="4">Delete</button></td>';
							html += '</tr>';
							cont++;
                        });        
                        $('.tbodyTallas').html(html);
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    },
            }).done(function(data) {

            });
            });
        });
        var exists = false;

    });

    function buscarTipoCamiseta(tipoProd) {
        $('#selectTipoCamiseta option').each(function (i, e) {
            if (this.value == tipoProd) {
                    $(this).attr('selected', 'selected');
                $(this).val(tipoProd).change();

                }
            });
    }

    function buscarGenero(genero) {
        $('#selectGenero option').each(function (i, e) {
            if (this.value == genero) {
                $(this).attr('selected', 'selected');
                $(this).val(genero).change();

            }
        });
	}

		     function obtenerPackingEstilo() {
            var r = 0; var c = 0; var i = 0; var cadena = new Array(1);
            cadena[0] = '';
            var nFilas = $("#tablaPack tbody>tr").length;
            var nColumnas = $("#tablaPack tr:last td").length;
            $('#tablaPack tbody>tr').each(function () {
                r = 0;
                c = 0;
                $(this).find("input").each(function () {
                    $(this).closest('td').find("input").each(function () {
                        cadena[c] += this.value + "*";
                        c++;
                    });

                    r++;
                });
            });

            var error = 0;
            $('#tablaPack').find('td.datoPack').each(function (i, el) {

                var valor = $(el).children().val();

                if ($(el).children().val() == '') {
                    error++;
                    $(el).children().css('border', '2px solid #e03f3f');

                } else {
                    $(el).children().css('border', '1px solid #cccccc');

                }
            });

            if (error == 0) {
                return (cadena);
            }

        }

    function validarEstilo(estilo) {
        const re = /^([A-Z]{4})([0-9A-Z]{3})([A-Z]{1})([A-Z]{2})/;
        var validar = estilo.match(re);
        if (validar != null) {
            var licencia = validar[1];
            var genero = validar[3];
            var tipoProd = validar[4];
        }
        var numero;
        if (!validar) {
            numero = 0;
            return numero;
        } else {
            numero = 1;
            buscarTipoCamiseta(tipoProd);
            buscarGenero(genero);
            return numero;

        }
    }

    function InputToUpper(obj) {
        if (obj.value != "") {
            obj.value = obj.value.toUpperCase();
        }
    }

    $(document).ready(function () {
        $('#nuevaTalla').on('click', function () {
            var r = 0; var c = 0; var i = 0; var cadena = new Array(4);
            cadena[0] = ''; cadena[1] = ''; cadena[2] = ''; cadena[3] = '';
            var nFilas = $("#tablaTallas tbody>tr").length;
            var nColumnas = $("#tablaTallas tr:last td").length;
            $('#tablaTallas tbody>tr').each(function () {
                r = 0;
                c = 0;
                $(this).find("input").each(function () {
                    $(this).closest('td').find("input").each(function () {
                        cadena[c] += this.value + "*" ;
                        c++;
                    });

                    r++;
                    });
                });   
            var error = 0;
            $('#tablaTallas').find('td.datoTalla').each(function (i, el) {

                var valor = $(el).children().val();

                    if ($(el).children().val() == '') {
                        error++;
                        $(el).children().css('border', '2px solid #e03f3f');

                    } else {
                        $(el).children().css('border', '1px solid #cccccc');

                }
            });

            enviarListaTalla(cadena, error);
        });
    });

    function redireccionarPagina() {
        window.location = '/pedidos/Index';
    }
    //Revisar por que se redirecciona a la pagina index
    function enviarListaTalla(cadena, error) {

        if (error != 0) {
            var alert = alertify.alert("Mensaje", 'All fields are required.').set('label', 'Aceptar');
            alert.set({ transition: 'zoom' });
            alert.set('modal', false);
		} else {
			$('#nuevaTalla').prop("disabled", true);
            $.ajax({
                url: "/POSummary/Obtener_Lista_Tallas",
                datatType: 'json',
                data: JSON.stringify({ ListTalla: cadena }),
                cache: false,
                type: 'POST',
                contentType: 'application/json',
                success: function (data) {
                    alertify.set('notifier', 'position', 'top-right');
                    alertify.notify('The size was registered correctly.', 'success', 5, null);
                    var confirm = alertify.confirm('Confirmation', 'Do you want to register a new Style ?', null, null).set('labels', { ok: 'OK', cancel: 'Cancel' });

                    confirm.set({ transition: 'slide' });

                    confirm.set('onok', function () {
                        $("#crearTallas").hide();
                        $('#nuevoItem').prop("disabled", false);
						limpiarFormItems();				
						$(".drop-image").hide();
						$(".preview").hide();
                        alertify.success('You have confirmed');
						$("#loading").css('display', 'none');
						$('#nuevaTalla').prop("disabled", false);
                    });
                    confirm.set('oncancel', function () {                       
                        $("#loading").css('display', 'none');                        
                        var ID = $("#PedidosId").val(); //Revisar id de pedido                       
						$("#nuevoEstiloModal").modal("hide");
						$('#nuevaTalla').prop("disabled", false);
                        buscar_estilos_rev(ID);
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    showError(xhr.status, xhr.responseText);
                    if (data.error == 1) {
                        alertify.notify('Check.', 'error', 5, null);
                    }
                }
            });
        }

    }

    function limpiarFormItems() {
        $('#ItemDescripcion_ItemEstilo').val('');
        $('#ItemDescripcion_Descripcion').val('');
        $('#CatColores_CodigoColor').val('');
        $('#CatColores_DescripcionColor').val('');
        $('#CantidadT').val('');
        $('#Precio').val('');
        $("#nuevoColor").prop("disabled", false);
        $("#nuevoEstilo").prop("disabled", false);
        limpiarInptCant();
        limpiarInptExt();
        limpiarInptEjm();
    }
    function limpiarInptCant() {
        $(".numCantTall").each(function () {
            $(this).val('');
        });
    }

    function limpiarInptExt() {
        $(".numExtTall").each(function () {
            $(this).val('0');
        });
    }

    function limpiarInptEjm() {
        $(".numEjmTall").each(function () {
            $(this).val('0');
        });
    }

    $(document).ready(function () {
        $('.tbodyTallas').sortable();
    });
    //Sumar cantidades
    var rep;
    document.addEventListener("blur", function (event) {
        var val = document.getElementById("CantidadT").value;
        if (val !== "") {
            rep = eval(val);
            document.getElementById("CantidadT").value = rep;
        }
	}, true);

			function sumar(index) {
		$(".numCantTall").each(
			function (index, value) {
				var resp;
				document.addEventListener("blur", function (event) {
					debugger
					var valor = "l-cantidad" + index;
					var val = document.getElementById(valor).value;
					if (val !== "") {
						resp = eval(val);
						document.getElementById(valor).value = resp;
					}
				}, true);
			}
		);
	}

			function sumarEjemplo(index) {
		$(".numEjmTall").each(
			function (index, value) {
				var resp;
				document.addEventListener("blur", function (event) {
					debugger
					var valor = "s-ejemplo" + index;
					var val = document.getElementById(valor).value;
					if (val !== "") {
						resp = eval(val);
						document.getElementById(valor).value = resp;
					}
				}, true);
			}
		);
	}
</script>
<style>
    .ui-autocomplete {
        position: absolute;
        z-index: 2150000000 !important;
        border: 2px solid #ccc;
        padding: 5px 0;
        border-radius: 2px;
        cursor: default;
        height: 200px;
        overflow-y: scroll;
        overflow-x: hidden;
    }
</style>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formItems" }))
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdItems)
    @Html.HiddenFor(model => model.IdColor)
    @Html.HiddenFor(model => model.PedidosId)
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h4>Reception of Items</h4>
        </div>
        <div class="container-fluid">
			<div class="form-row ">
				<div class="form-group col-md-4">
					@Html.LabelFor(model => model.ItemDescripcion.ItemEstilo, htmlAttributes: new { @class = "control-label" })
					@Html.EditorFor(model => model.ItemDescripcion.ItemEstilo, new { htmlAttributes = new { @class = "form-control nuevo_item",  @style = "text-transform:uppercase" } })
					@Html.ValidationMessageFor(model => model.ItemDescripcion.ItemEstilo, "", new { @class = "text-danger" })
				</div>
				<div class="form-group col-sm-3">
					@Html.LabelFor(model => model.CatTipoFormPack.TipoFormPack, htmlAttributes: new { @class = "control-label " }) <br />
					@Html.DropDownList("listTipoFormPack", (SelectList)ViewBag.listTipoFormPack, string.Empty, new { @class = "form-control nuevo_item", @id = "selectFormPack", @name = "state", @style = "width: 60%;" })
					@Html.ValidationMessageFor(model => model.IdTipoFormPack, "", new { @class = "text-danger" })
				</div>
				<div class="form-group col-md-4">
					@Html.LabelFor(model => model.ItemDescripcion.Descripcion, htmlAttributes: new { @class = "control-label" })
					@Html.EditorFor(model => model.ItemDescripcion.Descripcion, new { htmlAttributes = new { @class = "form-control nuevo_item", @style = "text-transform:uppercase" } })
					@Html.ValidationMessageFor(model => model.ItemDescripcion.Descripcion, "", new { @class = "text-danger" })
				</div>
				<div class="form-group col-md-2">
					<br />
					<button type="button" class="btn btn-success" id="nuevoEstilo" data-toggle="modal">
						<span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Add Style
					</button>
				</div>
			</div>
        </div>
		<hr />
        <div class="container-fluid">
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CatColores.CodigoColor, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CatColores.CodigoColor, new { htmlAttributes = new { @class = "form-control nuevo_item",  @style = "text-transform:uppercase" } })
                    @Html.ValidationMessageFor(model => model.CatColores.CodigoColor, "", new { @class = "text-danger" })

                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CatColores.DescripcionColor, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CatColores.DescripcionColor, new { htmlAttributes = new { @class = "form-control nuevo_item",  @style = "text-transform:uppercase" } })
                    @Html.ValidationMessageFor(model => model.CatColores.DescripcionColor, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <br />
                    <button type="button" class="btn btn-success" id="nuevoColor" data-toggle="modal">
                        <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Add Color
                    </button>

                </div>
            </div>
        </div>
		<hr />

        <div class="container-fluid">
			<div class="form-row">

				<div class="form-group col-sm-4">
					@Html.LabelFor(model => model.CantidadT, htmlAttributes: new { @class = "control-label" })
					@Html.EditorFor(model => model.CantidadT, new { htmlAttributes = new { @class = "form-control nuevo_item" } })
					@Html.ValidationMessageFor(model => model.CantidadT, "", new { @class = "text-danger" })
				</div>

				<div class="form-group col-sm-5">
					@Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label" })
					@Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control nuevo_item" } })
					@Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })

				</div>
				<div class="form-group col-sm-4">
					@Html.LabelFor(model => model.CatEspecialidades.Especialidad, htmlAttributes: new { @class = "control-label " }) <br />
					@Html.DropDownList("listEspecialidad", (SelectList)ViewBag.listEspecialidad, string.Empty, new { @class = "form-control nuevo_item", @id = "selectEspecialidad", @name = "state", @style = "width: 60%;" })
					@Html.ValidationMessageFor(model => model.IdEspecialidad, "", new { @class = "text-danger" })
				</div>
				<div class="form-group col-sm-4 estilo">
					@Html.LabelFor(model => model.IdGenero, htmlAttributes: new { @class = "control-label " }) <br />
					@Html.DropDownList("listGenero", (SelectList)ViewBag.listGenero, string.Empty, new { @class = "form-control nuevo_item", @id = "selectGenero", @name = "state", @style = "width: 80%;" })
					@Html.ValidationMessageFor(model => model.IdGenero, "", new { @class = "text-danger" })

				</div>
				<div class="form-group col-sm-4">
					@Html.LabelFor(model => model.IdTela, htmlAttributes: new { @class = "control-label " }) <br />
					@Html.DropDownList("listTela", (SelectList)ViewBag.listTela, string.Empty, new { @class = "form-control nuevo_item", @id = "selectTela", @name = "state", @style = "width: 80%;" })
					@Html.ValidationMessageFor(model => model.IdTela, "", new { @class = "text-danger" })
				</div>

			</div>
        </div>
        <div class="container-fluid">
            <div class="form-row">                
                <div class="form-group col-sm-4">
                    @Html.LabelFor(model => model.TipoCamiseta, htmlAttributes: new { @class = "control-label " }) <br />
                    @Html.DropDownList("listTipoCamiseta", (SelectList)ViewBag.listTipoCamiseta, string.Empty, new { @class = "form-control nuevo_item", @id = "selectTipoCamiseta", @name = "state", @style = "width: 80%;" })
                    @Html.ValidationMessageFor(model => model.TipoCamiseta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <br />
                <div class="text-center margin-bottom col-sm-12">
                    <button type="button" class="btn btn-success" id="nuevoItem" data-toggle="modal">
                        <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Save Item
                    </button>
                </div>
            </div>
        </div>

    </div>

    <div class="panel panel-primary" id="crearTallas">
        <div class="panel-heading">
            <h4>Reception of Sizes</h4>
        </div>

        <div class="container-fluid">
            <br />

            <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAdd">+ Add Size</button>
            <table class="table" id="tablaTallas">
                <thead>
                    <tr>
                        <th class="index"><span class="glyphicon glyphicon-fullscreen" aria-hidden="true" /></th>
                        <th>Size</th>
                        <th>Quantity</th>
                        <th>Extra</th>
                        <th>Examples</th>
                    </tr>
                </thead>
                <tbody class="tbodyTallas"></tbody>
            </table>
            <button type="button" id="nuevaTalla" class="btn btn-success btn-md pull-right btn-sm">Save Size</button>
            <br />
            <br />
        </div>
    </div>
    <br />
    <br />
    <br />

</div>

}

