@model FortuneSystem.Models.Pedidos.OrdenesCompra

@{
    ViewBag.Title = "Packing Instruction";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css" />
<link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css" />

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>

<!-- DevExtreme themes -->
<link rel="stylesheet" type="text/css" href="~/Content/dx.common.css" />
<link rel="stylesheet" type="text/css" href="~/Content/dx.light.css" />


<!-- DevExtreme library -->
<script type="text/javascript" src="~/Scripts/jszip.min.js"></script>
<script type="text/javascript" src="~/Scripts/dx.all.js"></script>

<script src="~/Scripts/general/obtenerListadoPackingTrims.js"></script>
<script src="~/Scripts/general/calculosPrintShop.js"></script>
<script src="~/Scripts/general/AgregarTallasPacking.js"></script>
<script src="~/Scripts/general/AgregarTallasPackingPPK.js"></script>
<script src="~/Scripts/general/agregarPallet.js"></script>
<script src="~/Scripts/general/actualizarPallet.js"></script>
<script src="~/Scripts/general/ActualizarEmpaques.js"></script>

<style>

    tr.highlighted td {
        background: #b3e0ff;
    }

    tr.histPack td {
        background: #e4c8e9;
    }

    .centerImg {
        display: block;
        margin-left: auto;
        margin-right: auto;
        width: 35%;
    }

    input[type=number] {
        width: 50%;
        text-align: center;
    }

    input.numeric {
        width: 50%;
        text-align: center;
    }

    input[type=text] {
        width: 50%;
        text-align: center;
    }

    #guardarBatch {
        margin-left: 750px;
        margin-top: 1px;
        width: 100px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #registrarNuevo {
        margin-left: 50px;
        margin-top: 1px;
        width: 170px;
        height: 40px;
        border: none;
        font-size: 15px;
        font-weight: 600;
    }

    #btnAssort {
        margin-left: 50px;
        margin-top: 1px;
        width: 170px;
        height: 40px;
        border: none;
        font-size: 15px;
        font-weight: 600;
    }

    #agregarNuevoPack {
        margin-left: 50px;
        margin-top: 1px;
        width: 170px;
        height: 40px;
        border: none;
        font-size: 15px;
        font-weight: 600;
    }

    #nuevaQty {
        margin-left: 50px;
        margin-top: 1px;
        width: 100px;
        height: 40px;
        border: none;
        font-size: 18px;
        font-weight: 600;
    }

    #modificarBatch {
        margin-left: 1000px;
        margin-top: 1px;
        width: 120px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #modificarPack {
        margin-left: 30px;
        margin-top: 1px;
        width: 190px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }


    #changePack {
        margin-left: 30px;
        margin-top: 1px;
        width: 190px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #addPack, #addPackAssort {
        margin-left: 100px;
        margin-top: 1px;
        width: 180px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }



    #editarPack, #editarBPPack, #crearPackPPK, #editarPackAssort, #crearPackBulks, #eliminarPack, #eliminarPackBP,#eliminarPackAssort {
        margin-left: 30px;
        margin-top: 1px;
        width: 180px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #nuevoPallet {
        margin-left: 700px;
        margin-top: 1px;
        width: 120px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #nuevoPalletAssort {
        margin-left: 700px;
        margin-top: 1px;
        width: 120px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #nuevoEmpaquePPK, #savePCEmpaque, #guardarPPK, #guardarVariosPPK, #nuevoEmpaqueVariosAddPPK, #nuevoEmpaqueVariosBulks, #nuevoEmpaqueVariosAddBulks, #guardarBulks {
        margin-left: 700px;
        margin-top: 1px;
        width: 120px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #nuevoEmpaqueAssort {
        margin-left: 200px;
        margin-top: 1px;
        width: 190px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #nuevoEmpaque, #guardarBulk {
        margin-left: 700px;
        margin-top: 1px;
        width: 120px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #nuevoEmpaqueBulkHT {
        /* margin-left: 700px;*/
        width: 140px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #nuevoAddEmpaquePPKHT {
        margin-right: 700px;
        width: 140px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #btnDone, #btnAddDone {
        width: 120px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #btnAddPPK, #nuevoEmpaqueVariosPPK, #btnAddDoneBulk, #botonAddNuevoBulk {
        width: 130px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #btnNext, #btnAddNext {
        width: 130px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #btnNuevoPPK, #btnAddNuevoPPK, #botonAddNuevoPPK, #botonAddNuevoPPKs {
        width: 130px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #btnNuevo, #guardarBulkHT, #btnAddNuevo {
        width: 130px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    #nuevoEmpaquePPKHT, #nuevoAddEmpaqueBulkHT {
        width: 130px;
        height: 40px;
        border: none;
        font-size: 20px;
        font-weight: 600;
    }

    input.txtDes {
        background-color: transparent;
        border: 0px;
        outline: none;
        -webkit-box-shadow: none;
        -moz-box-shadow: none;
        box-shadow: none;
        width: 50%;
        font-size: 18px;
        font-weight: 500;
        text-align: justify;
    }

    .center {
        display: block;
        margin-left: auto;
        margin-right: auto;
        width: 60%;
        height: 25%;
    }

    .tImagen {
        text-align: center;
        font-size: 20px;
    }

    img {
        cursor: zoom-in;
    }

    .selected {
        background-color: brown;
        color: #FFF;
    }

    #flecha {
        cursor: auto;
    }

    /*label.lTotCartPPK {
        display: inline-block;
        max-width: 100%;
        margin-bottom: 5px;
        font-weight: bold;
    }*/
    #pie {
        height: 400px;
    }

    #pieht {
        height: 500px;
    }

    .letrero {
        font-family: impact, sans-serif;
        font-size: 3em;
        text-align: center;
        letter-spacing: 3.8pt;
        word-spacing: -12.6pt;
        color: #2f77b5;
    }

    body .editar {
        width: 140% !important;
        margin-left: -20% !important;
    }

    body .editarPack {
        width: 140% !important;
        height: 200% !important;
        margin-left: -20% !important;
    }

    body .addPacking {
        width: 140% !important;
        height: 300% !important;
        margin-left: -20% !important;
    }
</style>
<script>
    $(function () {
        $('#imagenArte').on('click', function () {
            $('.enlargeImageModalSource').attr('src', $(this).attr('src'));
            $('#enlargeImageModal').modal('show');
        });
        $('#imagenPNL').on('click', function () {
            $('.enlargeImageModalSource').attr('src', $(this).attr('src'));
            $('#enlargeImageModal').modal('show');
        });
        /*$('#editarPack').on('click', function () {
            $('#packingModal').modal('show');
        });*/
    });
</script>
</div>
<div class="modal fade" id="enlargeImageModal" tabindex="-1" role="dialog" aria-labelledby="enlargeImageModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">ART</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="modal-body">
                <img class="enlargeImageModalSource center" style="width: 80%;">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="packingModal" tabindex="-1" role="dialog" aria-labelledby="packingModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">Modify 1rst Quantity</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="modal-body">
                <div id="ContenedorModifyModal"></div>
                <div class="container-fluid">
                    <table id="tableQtySizePack" class="table table-sm table-striped table-hover ">
                        <thead>
                            <tr>
                                <th style="border-top-left-radius:0px !important;">#</th>
                                <th>SIZE</th>
                                <th>QUANTITY</th>
                            </tr>
                        </thead>
                        <tbody class="tbodyPackingEditar"></tbody>
                    </table>
                    <div id="listaCantidadPack"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btnCancel" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="tallasModal" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="tallasModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">TALLAS</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="modal-body">
                <div class="form-group input-group">
                    <span class="input-group-addon" style="width:150px;">REFERENCE ORDER:</span>
                    <input type="text" style="width:100px;" class="form-control" id="eaddress">
                    @Html.EditorFor(model => model.PO, new { htmlAttributes = new { @class = "form-control", @style = "width:150px;" } })
                </div>
                <div id="tablaTallasAssort"></div>
                <br /><br />

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="registroPiezasModal" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="registroPiezasModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">PACKING QUANTITIES</h2>

            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="editarPackModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="editarPackModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content editarPack">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">Edit Packing</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">

                <div class="container-fluid">
                    <div class="form-row" id="opcPacking">
                        @Html.HiddenFor(model => model.Packing.PackingTypeSize.IdPackingTypeSize)
                        <div class="col-sm-5">
                            @Html.LabelFor(model => model.Packing.PackingTypeSize.TipoEmpaque, htmlAttributes: new { @class = "control-label " })
                            @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.TipoEmpaque, "Select a type of packaging", new { @class = "form-control", id = "TipoEmpPack" })
                            @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TipoEmpaque, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.Packing.PackingTypeSize.NumberPO, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Packing.PackingTypeSize.NumberPO, new { htmlAttributes = new { @class = "form-control", id = "numeroPOPackHTP" } })
                            @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NumberPO, "", new { @class = "text-danger" })
                        </div>
                        <div id="opcionesPPKPack" style="display:none;">

                            <div class="col-sm-4">
                                <br />
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.TotalUnitsPPKActHT, htmlAttributes: new { @class = "control-label " })<br />
                                @Html.EditorFor(model => model.Packing.PackingTypeSize.TotalUnitsPPKActHT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TotalUnitsPPKActHT, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <table class="table" id="tablaTallasActBulkHT">
                        <thead><tr><th>#</th><th>Size</th> <th>QTY#</th> <th>CARTONS 50PCS#</th> <th>PARTIAL#</th> <th>TOTALCARTONS#</th></tr></thead>
                        <tbody class="packBulkActReg"></tbody>
                    </table>
                    <table class="table" id="tablaTallasActPPKHT">
                        <thead><tr><th>#</th><th>Size</th> <th>Ratio</th></tr></thead>
                        <tbody class="packPPKActReg"></tbody>
                    </table>
                    <div id="listaTallaActPHT"></div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btnCancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="editarPackBPModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="editarPackBPModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content editarPack">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">Edit Packing</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">

                <div class="container-fluid">
                    <div class="form-row" id="opcPacking">
                        @Html.HiddenFor(model => model.Packing.PackingTypeSize.IdPackingTypeSize)
                        <div class="col-sm-5">
                            @Html.LabelFor(model => model.Packing.PackingTypeSize.TipoEmpaqueBP, htmlAttributes: new { @class = "control-label " })
                            @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.TipoEmpaqueBP, "Select a type of packaging", new { @class = "form-control"/*, @onchange = "ObtenerTallasPorTipo(this);"*/})
                            @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TipoEmpaqueBP, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div id="opcSelectPackPPKS" style="display:none;">
                        @Html.LabelFor(model => model.Packing.PackingTypeSize.PackingRegistradoPPK, htmlAttributes: new { @class = "control-label " }) <br />
                        @Html.DropDownList("listPacksName", (IEnumerable<System.Web.Mvc.SelectListItem>)ViewData["listPacksName"], "Select Packing Name", new { @class = "form-control", @id = "selectPackingNameVariosPPK", @name = "state", @style = "width: 15% !important;" })
                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.PackingRegistradoPPK, "", new { @class = "text-danger" })
                    </div>
                    <div id="opcSelectPBulks" style="display:none;">
                        @Html.LabelFor(model => model.Packing.PackingTypeSize.PackingRegistradoVariosBULKS, htmlAttributes: new { @class = "control-label " }) <br />
                        @Html.DropDownList("listPacksName", (IEnumerable<System.Web.Mvc.SelectListItem>)ViewData["listPacksName"], "Select Packing Name", new { @class = "form-control", @id = "selectPackingNameVariosBulksEdit", @name = "state", @style = "width: 15% !important;" })
                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.PackingRegistradoVariosBULKS, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-row" id="opcPacking2">

                        <br />
                        <div class="col-sm-4" id="opcionNumeroVariosP" style="display:none; ">
                            @Html.LabelFor(model => model.Packing.PackingTypeSize.NumberPPKs, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Packing.PackingTypeSize.NumberPPKs, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NumberPPKs, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-5" id="opcionNombreVariosP" style="display:none; ">
                            @Html.LabelFor(model => model.Packing.PackingTypeSize.NombrePackingPPKs, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Packing.PackingTypeSize.NombrePackingPPKs, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NombrePackingPPKs, "", new { @class = "text-danger" })
                            <br />
                        </div>
                        <div class="col-sm-5" id="opcionNombreVariosBulks" style="display:none; ">
                            @Html.LabelFor(model => model.Packing.PackingTypeSize.NombrePackingBulks, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Packing.PackingTypeSize.NombrePackingBulks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NombrePackingBulks, "", new { @class = "text-danger" })
                            <br />
                        </div>

                    </div>
                    <!--TABLA DE REGISTRO TIPO DE EMPAQUE DE PIEZAS BULK-->
                    <table class="table" id="tablaTallasBulkPcsEditar">
                        <thead>	<tr style="align-content:center"><th>#</th><th>Size</th><th>Pieces#</th></tr></thead>
                        <tbody class="tbodyTallaBulkPcsEditar"></tbody>
                    </table>
                    <!--TABLA DE REGISTRO TIPO DE EMPAQUE DE RATIO PPK-->
                    <table class="table" id="tablaTallasPPKRatioEditar">
                        <thead>	<tr><th>#</th><th>Size</th><th>Ratio</th></tr></thead>
                        <tbody class="tbodyTallaPPKRatioEditar"></tbody>
                    </table>
                    <!--TABLA DE REGISTRO TIPO DE EMPAQUE DE RATIO VARIOS PPKS-->
                    <table class="table" id="tablaTallasVariosPPKEditarRatio">
                        <thead>	<tr><th>#</th><th>Size</th><th>Qty</th><th>Ratio</th></tr></thead>
                        <tbody class="tbodyTallaVariosPPKEditarRatio"></tbody>
                    </table>
                    <!--TABLA DE REGISTRO TIPO DE EMPAQUE DE PIECES VARIOS BULKS-->
                    <table class="table" id="tablaTallasVariosBulksEditarPcs">
                        <thead>	<tr><th>#</th><th>Size</th><th>Pieces</th></tr></thead>
                        <tbody class="tbodyTallaVariosBulksEditarPcs"></tbody>
                    </table>
                    <div id="listaTallaPEditar"></div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary " data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="addPackModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="addPackModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content addPacking">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">Add Packing</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <div id="div_titulo_Bulk_Add" style=" overflow:auto; display:none; "></div>
                <div class="container-fluid">
                    <div class="form-row" id="opcPacking">
                        @Html.HiddenFor(model => model.Packing.PackingTypeSize.IdPackingTypeSize)
                        <div class="col-sm-5">
                            @Html.LabelFor(model => model.Packing.PackingTypeSize.TipoEmpaque, htmlAttributes: new { @class = "control-label " })
                            @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.TipoEmpaque, "Select a type of packaging", new { @class = "form-control", id = "TipoEmpPackAdd" })
                            @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TipoEmpaque, "", new { @class = "text-danger" })

                        </div>
                        <div id="opcionesNumPO" style="display:none;">
                            <div class="col-sm-8">
                                <br />
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.FormaEmpaque, htmlAttributes: new { @class = "control-label " })<br />
                                @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.FormaEmpaque, "Select the packaging form", new { @class = "form-control", id = "TipoFormaEmpaque"/*, @onchange = "ObtenerTallasPorTipo(this);"*/})
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.FormaEmpaque, "", new { @class = "text-danger" })
                                <br />
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.NumberPO, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Packing.PackingTypeSize.NumberPO, new { htmlAttributes = new { @class = "form-control", id = "numeroPOPackActBulkHTP" } })
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NumberPO, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="form-row" id="opcionestotalPPK" style="display:none; ">
                        <div class="col-sm-8">
                            @Html.LabelFor(model => model.Packing.PackingTypeSize.NumberPO, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.Packing.PackingTypeSize.NumberPO, new { htmlAttributes = new { @class = "form-control", id = "numeroPOPackActPPKHTP" } })
                            @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NumberPO, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-sm-8">

                            @Html.LabelFor(model => model.Packing.PackingTypeSize.TotalUnits, htmlAttributes: new { @class = "control-label ", id = "numTotalUnitLabelPPK" })
                            @Html.EditorFor(model => model.Packing.PackingTypeSize.TotalUnits, new { htmlAttributes = new { @class = "form-control", id = "numTotalUnitPPK" } })
                            @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TotalUnits, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <br />
                    <table class="table" id="tablaTallasAddBulkHT" style="display:none;">
                        <thead><tr><th>Size</th> <th>QTY#</th> <th>CARTONS 50PCS#</th> <th>PARTIAL#</th> <th>TOTALCARTONS#</th></tr></thead>
                        <tbody class="packBulkAddReg"></tbody>
                    </table>
                    <table class="table" id="tablaTallasAddPPKHT" style="display:none;">
                        <thead><tr><th>Size</th> <th>Ratio</th></tr></thead>
                        <tbody class="packPPKAddReg"></tbody>
                    </table>
                    <div id="listaTallaActAddPHT"></div>
                    <br />
                    <br />
                    <br />
                    <div class="btn-toolbar pull-right" role="toolbar" id="grupoBotonesBulkAdd" aria-label="Toolbar with button groups" style="display:none;">
                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <button type="button" id="btnAddDone" class="btn btn-success">Done</button>
                        </div>
                        <div class="btn-group mr-2" role="group" aria-label="Second group">
                            <button type="button" id="btnAddNuevo" class="btn btn-success" onclick="event.preventDefault(); ConfirmEmpaqueBulk(this);">+ New Bulk</button>
                        </div>
                        <div class="btn-group mr-2" role="group" aria-label="Second group">
                            <button type="button" id="btnAddNuevoPPK" class="btn btn-success" onclick="event.preventDefault(); ConfirmEmpaquePPK(this);">+ New PPK</button>
                        </div>
                        <div class="btn-group" role="group" aria-label="Third group">
                            <button type="button" id="btnAddNext" class="btn btn-success">Next PPK</button>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btnCancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="addPackPPKModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="addPackPPKModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content addPacking">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">Add Packing</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div id="opcionesPPK" style="display:none; ">
                        <div class="form-row">
                            <div class="form-group col-sm-4 tipoP">
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.TipoEmpaquePPK, htmlAttributes: new { @class = "control-label " })
                                @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.TipoEmpaquePPK, "Select a type of packaging", new { @class = "form-control"/*, @onchange = "ObtenerTallasPorTipo(this);"*/})
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TipoEmpaquePPK, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-3" id="opcionNumeroVariosPPKs" style="display:none; ">
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.NumberAddPPKs, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Packing.PackingTypeSize.NumberAddPPKs, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NumberAddPPKs, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-5" id="opcionNombreVarios" style="display:none; ">
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.NombrePackingAddPPKs, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Packing.PackingTypeSize.NombrePackingAddPPKs, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NombrePackingAddPPKs, "", new { @class = "text-danger" })
                                <br />
                            </div>
                        </div>

                    </div>
                    <!--TABLA DE REGISTRO TIPO DE EMPAQUE DE RATIO VARIOS PPKS-->
                    <table class="table" id="tablaTallasVariosAddPPKRatio">
                        <thead>	<tr><th>Size</th><th>Qty</th><th>Ratio</th></tr></thead>
                        <tbody class="tbodyTallaVariosAddPPKRatio"></tbody>
                    </table>

                    <div id="listaTallaAddPPK"></div>
                    <br />
                    <br />
                    <br />
                    <!--<div class="btn-toolbar pull-right" role="toolbar" id="botonesAddPPK" aria-label="Toolbar with button groups" style="display:none; ">
                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <button type="button" id="btnAddDone" class="btn btn-success">Done</button>
                        </div>
                        <div class="btn-group mr-2" role="group" aria-label="Second group">
                            <button type="button" id="botonAddNuevoPPKs" class="btn btn-success" onclick="event.preventDefault(); ConfirmAddPPKS(this);">+ New PPK</button>
                        </div>
                    </div>-->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btnCancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="addPackBulksModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="addPackBulksModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content addPacking">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">Add Packing</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div id="opcionesBulks" style="display:none; ">
                        <div class="form-row">
                            <div class="form-group col-sm-4 tipoP">
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.TipoEmpaqueBulk, htmlAttributes: new { @class = "control-label " })
                                @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.TipoEmpaqueBulk, "Select a type of packaging", new { @class = "form-control"/*, @onchange = "ObtenerTallasPorTipo(this);"*/})
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TipoEmpaqueBulk, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-5" id="opcionNombreVariosBulksAdd" style="display:none; ">
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.NombrePackingAddBulks, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Packing.PackingTypeSize.NombrePackingAddBulks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NombrePackingAddBulks, "", new { @class = "text-danger" })
                                <br />
                            </div>
                        </div>

                    </div>
                    <!--TABLA DE REGISTRO TIPO DE EMPAQUE DE PIECES VARIOS BULKS-->
                    <table class="table" id="tablaTallasVariosAddBulkPcs">
                        <thead><tr><th>Size</th><th>Pieces</th></tr></thead>
                        <tbody class="tbodyTallaVariosAddBulkPcs"></tbody>
                    </table>

                    <div id="listaTallaAddBulks"></div>
                    <br />
                    <br />
                    <br />
                    <!--<div class="btn-toolbar pull-right" role="toolbar" id="botonesAddPPK" aria-label="Toolbar with button groups" style="display:none; ">
                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <button type="button" id="btnAddDone" class="btn btn-success">Done</button>
                        </div>
                        <div class="btn-group mr-2" role="group" aria-label="Second group">
                            <button type="button" id="botonAddNuevoPPKs" class="btn btn-success" onclick="event.preventDefault(); ConfirmAddPPKS(this);">+ New PPK</button>
                        </div>
                    </div>-->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btnCancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid" style="padding-left:12em; padding-right:10em;">
    <div class="letrero">PACKING</div>
    <div class="panel panel-primary" id="consultaPO">
        <div class="panel-heading">
            <h2>Reference Order: @Html.DisplayFor(model => model.PO, new { @class = "control-label col-md-6" })  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;      Purchase Order: @Html.DisplayFor(model => model.VPO, new { @class = "control-label col-md-6" })</h2>
        </div>
        @Html.HiddenFor(model => model.IdPedido)
        @Html.HiddenFor(model => model.EstatusPackAssort)

    </div>

    <div class="container-fluid">
        <div class="form-row">
            <div class="form-group col-sm-4 estilo">
                <label style="font-size: x-large; font-weight: 500">
                    @Html.LabelFor(model => model.CatCliente.Nombre, new { @class = "control-label" }):
                    <label style="font-size: x-large; font-weight: 500">@Html.DisplayFor(model => model.CatCliente.Nombre, new { @class = "control-label col-md-6" })</label>
                </label>
            </div>
            <div class="form-group col-sm-7 estilo">
                <label style="font-size: x-large; font-weight: 500">
                    @Html.LabelFor(model => model.CatClienteFinal.NombreCliente, new { @class = "control-label" }):
                    <label style="font-size: x-large; font-weight: 300">@Html.DisplayFor(model => model.CatClienteFinal.NombreCliente, new { @class = "control-label col-md-6" })</label>
                </label>
            </div>
        </div>
    </div>
    <div class="panel panel-primary" id="consultaPO">
        <div class="panel-heading">
            <h4>STYLES</h4>
            @Html.HiddenFor(model => model.InfoSummary.IdItems)
        </div>
        <div id="div_tabla_estilos" style="width: 100%; height:350px; overflow:auto; ">
            <br />
            @if (Model.NombreClienteFinal != "HOT TOPIC" && Model.NombreClienteFinal != "URBAN OUTFITTERS")
            {
                if (Model.HistorialPacking == 0)
                {
                    <div class="btn-group" role="group" aria-label="Third group">
                        <button type="button" id="btnAssort" class="btn btn-primary">ASSORTMENT</button>
                    </div>
                }
            }
            <br />
            <div class="form-group">
                <input type="text" class="form-control pull-right" style="width:20%" id="search" placeholder="Type to search table...">
            </div>
            <table id="tabless" class="table table-sm table-striped table-hover ">
                <thead>
                    <tr>
                        <th style="border-top-left-radius:0px !important;">#</th>
                        @if (Model.CatCliente.Customer == 2)
                        {
                            <th>PO FANTASY#</th>
                        }
                        <th>ITEM</th>
                        <th>ITEM DESCRIPTION</th>
                        <th>COLOR CODE</th>
                        <th>COLOR DESCRIPTION</th>
                        <th>FORM PACK</th>
                        <th>INSTR.</th>
                        <th>QTY</th>
                        <th>PRICE</th>
                        <th>TOTAL</th>
                        @*<th>ACTIONS</th> *@
                    </tr>
                </thead>
                <tbody class="tbody"></tbody>
            </table>
        </div>
    </div>

    <br />
    <br />
    @if (Model.NombreClienteFinal == "HOT TOPIC")
    {
        <script src="~/Scripts/general/obtenerListadoPackingTrimsHT.js"></script>
        <div class="row" style="display:none;" id="panelHotTopic">
            <div class="col-sm-11">
                <div class="panel panel-primary" id="consultaTallaHT" style="visibility:hidden;  height: 1800px;">

                    <div class="panel-heading">
                        <h4>PACKING HOT TOPIC</h4>
                    </div>
                    <br />
                    <!--<div class="btn-group mr-6" role="group" aria-label="First group">
                        <button type="button" id="btnNewP" class="btn btn-primary">+ New Registration Packing</button>
                    </div>-->
                    <div class="container-fluid" style=" overflow:auto;">
                        <br />
                        <div id="div_Desc_Estilo" style="background-color:lightblue; text-align:center"></div>
                        <div id="botonesPackingcente" style="display:inline; text-align:center">
                            @if ((int)Session["idCargo"] == 10 || (int)Session["idCargo"] == 1)
                            {
                                <button type="button" class="btn btn-success btn-md pull-right " id="addPack" onclick="event.preventDefault(); ConfirmAddPack(this);"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Add Pack</button>
                                <button type="button" class="btn btn-success btn-md pull-right btnEditarPack" id="editarPack" onclick="event.preventDefault(); ConfirmEditarPackHT(this);"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit Pack</button>
                                <button type="button" class="btn btn-danger btn-md pull-right btnEliminarPackHT" id="eliminarPack" onclick="event.preventDefault(); ConfirmEliminarPackHT(this);"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete Pack</button>
                            }

                        </div>

                        <div></div>
                        <div></div>
                        <div id="div_estilo_ht"></div>
                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAddQ">+ Add Size</button>
                        <br />
                        <div id="listaTallaHT"></div>
                        <table id="tablePackingHT" class="table table-sm table-striped table-hover ">
                            <thead class="encabezado"></thead>
                            <tbody class="tbodyPHT"></tbody>
                        </table>
                        <button type="button" id="nuevaTalla" class="btn btn-success btn-md pull-right btn-sm">Save Sizes</button>
                        <br />
                    </div>
                    <div class="panelHT">
                        <div id="panelNoEstilosHT" style="display:none;">
                            @{
                                string[] imgsB = { "~/Content/img/iconoEmpaque.png" };
                            }

                            @foreach (var imgB in imgsB)
                            {
                                <img src="@Url.Content(imgB)" alt="tbd" id="imgPanelBPPK" class="centerImg" />
                                <p style="font-size:200%; text-align:center;">
                                    At the moment, there is no registered packaging for order.
                                </p>
                            }
                        </div>
                        <div class="container-fluid" style=" overflow:auto;">
                            <div id="div_titulo_Bulk" style=" overflow:auto; display:none; "></div>
                            <div id="listaBatchHT" style="overflow: auto; height: 100px; display:none;"></div>
                            <div id="listaTallaBatchHT" style="overflow: auto; height: 100px; display:none;"></div>
                            <br />
                            <div id="opciones" style="display: none;">
                                <div class="form-row">
                                    <div class="form-group col-sm-12 tipoP">
                                        @Html.LabelFor(model => model.Packing.PackingTypeSize.FormaEmpaque, htmlAttributes: new { @class = "control-label " })
                                        @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.FormaEmpaque, "Select the packaging form", new { @class = "form-control"/*, @onchange = "ObtenerTallasPorTipo(this);"*/})
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.FormaEmpaque, "", new { @class = "text-danger" })

                                        @Html.LabelFor(model => model.Packing.PackingTypeSize.NumberPO, htmlAttributes: new { @class = "control-label " })
                                        @Html.EditorFor(model => model.Packing.PackingTypeSize.NumberPO, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NumberPO, "", new { @class = "text-danger" })

                                    </div>
                                    <br />
                                    <div class="form-group col-sm-12 tipoP" id="opcionTotal" style="display: none;">
                                        @Html.LabelFor(model => model.Packing.PackingTypeSize.TotalUnitsPPKHT, htmlAttributes: new { @class = "control-label " })<br />
                                        @Html.EditorFor(model => model.Packing.PackingTypeSize.TotalUnitsPPKHT, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TotalUnitsPPKHT, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="container-fluid">
                            <div id="div_titulo_Register" style=" overflow:auto; display:none; "></div>
                            <div class="form-row" id="opcionesRegistro" style="display:none; ">
                                <div class="col-sm-5">
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.TipoEmpaque, htmlAttributes: new { @class = "control-label " })
                                    @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.TipoEmpaque, "Select a type of packaging", new { @class = "form-control", id = "TipoEmp" })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TipoEmpaque, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.NumberPO, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.NumberPO, new { htmlAttributes = new { @class = "form-control", id = "numeroPOHT" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NumberPO, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.CantidadPPKS, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.CantidadPPKS, new { htmlAttributes = new { @class = "form-control cantPPK" } })
                                    @Html.ValidationMessageFor(model => model.Packing.CantidadPPKS, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.CantBox, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.CantBox, new { htmlAttributes = new { @class = "form-control cantCajas", id = "numeroCajas" } })
                                    @Html.ValidationMessageFor(model => model.Packing.CantBox, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-sm-4">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.TotalUnits, htmlAttributes: new { @class = "control-label ", id = "numTotalUnitLabel" })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.TotalUnits, new { htmlAttributes = new { @class = "form-control", id = "numTotalUnit", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TotalUnits, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row" id="opcionesRegistroHTPPK" style="display:none; ">
                                <div class="col-sm-8">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.TotalUnits, htmlAttributes: new { @class = "control-label ", id = "numTotalUnitLabel2" })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.TotalUnits, new { htmlAttributes = new { @class = "form-control", id = "numTotalUnit2", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TotalUnits, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!-- <button type="button" id="btnAddP" class="btn btn-xs btn-primary classAdd">+ Add Size</button>-->
                            <br />
                            <br />
                            <!--TABLA DE REGISTRO DE BULK -->
                            <table class="table" id="tablaTallasBulkHT">
                                <thead><tr><th>Size</th> <th>QTY#</th> <th>CARTONS 50PCS#</th> <th>PARTIAL#</th> <th>TOTALCARTONS#</th></tr></thead>
                                <tbody class="packBulkReg"></tbody>
                            </table>
                            <table class="table" id="tablaTallasPPKHT">
                                <thead><tr><th>Size</th> <th>Ratio</th></tr></thead>
                                <tbody class="packPPKReg"></tbody>
                            </table>
                            @*<table class="table" id="tablaTallasPalletHT">
                                    <thead><tr><th>Size</th> <th>Box#</th> <th>QTY</th><th>TOTALCARTONS#</th></tr></thead>
                                    <tbody class="packBulkReg"></tbody>
                                </table>*@

                            <div id="listaTallaPHT"></div>
                            <br />
                            <br />
                            <br />
                            <div class="btn-toolbar pull-right" role="toolbar" id="grupoBotones" aria-label="Toolbar with button groups">
                                <div class="btn-group mr-2" role="group" aria-label="First group">
                                    <button type="button" id="btnDone" class="btn btn-success">Done</button>
                                </div>
                                <div class="btn-group mr-2" role="group" aria-label="Second group">
                                    <button type="button" id="btnNuevo" class="btn btn-success" onclick="event.preventDefault(); ConfirmEmpaqueBulk(this);">+ New Bulk</button>
                                </div>
                                <div class="btn-group mr-2" role="group" aria-label="Second group">
                                    <button type="button" id="btnNuevoPPK" class="btn btn-success" onclick="event.preventDefault(); ConfirmEmpaquePPK(this);">+ New PPK</button>
                                </div>
                                <div class="btn-group" role="group" aria-label="Third group">
                                    <button type="button" id="btnNext" class="btn btn-success">Next PPK</button>
                                </div>
                            </div>
                        </div>
                        <!--contenedor ppk-->
                        @if ((int)Session["idCargo"] == 15)
                        {
                            <div class="pies-container" id="containerHTPie">
                                <div id="pieht"></div>
                            </div>
                        }
                        else if ((int)Session["idCargo"] == 0 || Session["idCargo"] == null)
                        {
                            <script type="text/javascript">
								var url = '@Url.Action("Login", "Login")';
								window.location.href = url;
                            </script>
                        }
                    </div>
                </div>
            </div>
            <div class="col-sm-1">
                <div class="panel panel-primary" id="arte" style=" display:none; width:150px; height: 450px; ">
                    <div class="panel-heading">
                        <h4>ART</h4>
                    </div>
                    <p class="tImagen">STYLE IMAGE</p>
                    <br />
                    <img id="imagenArte" class="center" />
                    <br />
                    <br />
                    <p class="tImagen">PNL IMAGE</p>
                    <br />
                    <img id="imagenPNL" class="center" />
                </div>
            </div>
        </div>
    }
    else if (Model.NombreClienteFinal == "URBAN OUTFITTERS")
    {
        <script src="~/Scripts/general/obtenerListadoPackingTrimsHT.js"></script>
        <div class="row" style="display:none;" id="panelHotTopic">
            <div class="col-sm-11">
                <div class="panel panel-primary" id="consultaTallaHT" style="visibility:hidden;  height: 1000px;">
                    <div class="panel-heading">
                        <h4>PACKING URBAN</h4>
                    </div>
                    <br />
                    <!--<div class="btn-group mr-6" role="group" aria-label="First group">
                        <button type="button" id="btnNewP" class="btn btn-primary">+ New Registration Packing</button>
                    </div>-->
                    <div class="container-fluid" style=" overflow:auto;">
                        <br />
                        <div id="div_Desc_Estilo" style="background-color:lightblue; text-align:center"></div>
                        <div id="botonesPackingcente" style="display:inline; text-align:center">
                            @if ((int)Session["idCargo"] == 10 || (int)Session["idCargo"] == 1)
                            {
                                <button type="button" class="btn btn-success btn-md pull-right " id="addPack" onclick="event.preventDefault(); ConfirmAddPack(this);"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Add Pack</button>
                                <button type="button" class="btn btn-success btn-md pull-right btnEditarPack" id="editarPack" onclick="event.preventDefault(); ConfirmEditarPackHT(this);"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit Pack</button>
                                <button type="button" class="btn btn-danger btn-md pull-right btnEliminarPackHT" id="eliminarPack" onclick="event.preventDefault(); ConfirmEliminarPackHT(this);"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete Pack</button>
                            }

                        </div>
                        <div id="div_estilo_ht"></div>
                        <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAddQ">+ Add Size</button>
                        <br />
                        <div id="listaTallaHT"></div>
                        <table id="tablePackingHTUrban" class="table table-sm table-striped table-hover ">
                            <thead class="encabezado"></thead>
                            <tbody class="tbodyPHT"></tbody>
                        </table>
                        <button type="button" id="nuevaTalla" class="btn btn-success btn-md pull-right btn-sm">Save Sizes</button>
                        <br />
                    </div>
                    <div class="panelHT">
                        <div id="panelNoEstilosHT" style="display:none;">
                            @{
                                string[] imgsB = { "~/Content/img/iconoEmpaque.png" };
                            }

                            @foreach (var imgB in imgsB)
                            {
                                <img src="@Url.Content(imgB)" alt="tbd" id="imgPanelBPPK" class="centerImg" />
                                <p style="font-size:200%; text-align:center;">
                                    At the moment, there is no registered packaging for order.
                                </p>
                            }
                        </div>
                        <div class="container-fluid" style=" overflow:auto;">
                            <div id="div_titulo_Bulk" style=" overflow:auto; display:none; "></div>
                            <div id="listaBatchHT" style="overflow: auto; height: 100px; display:none;"></div>
                            <div id="listaTallaBatchHT" style="overflow: auto; height: 100px; display:none;"></div>
                            <br />
                            <div id="opciones" style="display: none;">
                                <div class="form-row">
                                    <div class="form-group col-sm-12 tipoP">
                                        @Html.LabelFor(model => model.Packing.PackingTypeSize.FormaEmpaque, htmlAttributes: new { @class = "control-label " })
                                        @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.FormaEmpaque, "Select the packaging form", new { @class = "form-control"/*, @onchange = "ObtenerTallasPorTipo(this);"*/})
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.FormaEmpaque, "", new { @class = "text-danger" })

                                        @Html.LabelFor(model => model.Packing.PackingTypeSize.NumberPO, htmlAttributes: new { @class = "control-label " })
                                        @Html.EditorFor(model => model.Packing.PackingTypeSize.NumberPO, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NumberPO, "", new { @class = "text-danger" })

                                    </div>
                                    <br />
                                    <div class="form-group col-sm-12" id="opcionTotal" style="display: none;">
                                        @Html.LabelFor(model => model.Packing.PackingTypeSize.TotalUnitsPPKHT, htmlAttributes: new { @class = "control-label " })<br />
                                        @Html.EditorFor(model => model.Packing.PackingTypeSize.TotalUnitsPPKHT, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TotalUnitsPPKHT, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="container-fluid">
                            <div id="div_titulo_Register" style=" overflow:auto; display:none; "></div>
                            <div class="form-row" id="opcionesRegistro" style="display:none; ">
                                <div class="col-sm-5">
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.TipoEmpaque, htmlAttributes: new { @class = "control-label " })
                                    @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.TipoEmpaque, "Select a type of packaging", new { @class = "form-control", id = "TipoEmp" })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TipoEmpaque, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.NumberPO, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.NumberPO, new { htmlAttributes = new { @class = "form-control", id = "numeroPOHT" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NumberPO, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.CantidadPPKS, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.CantidadPPKS, new { htmlAttributes = new { @class = "form-control cantPPK" } })
                                    @Html.ValidationMessageFor(model => model.Packing.CantidadPPKS, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.CantBox, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.CantBox, new { htmlAttributes = new { @class = "form-control cantCajas", id = "numeroCajas" } })
                                    @Html.ValidationMessageFor(model => model.Packing.CantBox, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-sm-4">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.TotalUnits, htmlAttributes: new { @class = "control-label ", id = "numTotalUnitLabel" })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.TotalUnits, new { htmlAttributes = new { @class = "form-control", id = "numTotalUnit" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TotalUnits, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!-- <button type="button" id="btnAddP" class="btn btn-xs btn-primary classAdd">+ Add Size</button>-->
                            <br />
                            <br />
                            <!--TABLA DE REGISTRO DE BULK -->
                            <table class="table" id="tablaTallasBulkHT">
                                <thead><tr><th>Size</th> <th>QTY#</th> <th>CARTONS 50PCS#</th> <th>PARTIAL#</th> <th>TOTALCARTONS#</th></tr></thead>
                                <tbody class="packBulkReg"></tbody>
                            </table>
                            <table class="table" id="tablaTallasPPKHT">
                                <thead><tr><th>Size</th> <th>Ratio</th></tr></thead>
                                <tbody class="packPPKReg"></tbody>
                            </table>
                            <div id="listaTallaPHT"></div>
                            <!--	<table class="table" id="tablaTallasBulkHT">
                                <thead><tr><th>Size</th> <th>QTY#</th> <th>CARTONS 50PCS#</th> <th>PARTIAL#</th> <th>TOTALCARTONS#</th></tr></thead>
                                <tbody class="tbodyHTPack"></tbody>
                            </table>
                            <table class="table" id="tablaTallasPalletHT">
                                <thead><tr><th>Size</th> <th>Box#</th> <th>QTY</th><th>TOTALCARTONS#</th></tr></thead>
                                <tbody class="tbodyHTPallet"></tbody>
                            </table>-->
                            <br />
                            <br />
                            <br />
                            <div class="btn-toolbar pull-right" role="toolbar" id="grupoBotones" aria-label="Toolbar with button groups">
                                <div class="btn-group mr-2" role="group" aria-label="First group">
                                    <button type="button" id="btnDone" class="btn btn-success">Done</button>
                                </div>
                                <div class="btn-group mr-2" role="group" aria-label="Second group">
                                    <button type="button" id="btnNuevo" class="btn btn-success" onclick="event.preventDefault(); ConfirmEmpaqueBulk(this);">+ New Bulk</button>
                                </div>
                                <div class="btn-group mr-2" role="group" aria-label="Second group">
                                    <button type="button" id="btnNuevoPPK" class="btn btn-success" onclick="event.preventDefault(); ConfirmEmpaquePPK(this);">+ New PPK</button>
                                </div>
                                <div class="btn-group" role="group" aria-label="Third group">
                                    <button type="button" id="btnNext" class="btn btn-success">Next PPK</button>
                                </div>
                            </div>
                        </div>
                        <!--contenedor ppk-->
                        @if ((int)Session["idCargo"] == 15)
                        {
                            <div class="pies-container" id="containerHTPie">
                                <div id="pieht"></div>
                            </div>
                        }
                        else if (Session["idCargo"] == null || (int)Session["idCargo"] == 0)
                        {
                            <script type="text/javascript">
								var url = '@Url.Action("Login", "Login")';
								window.location.href = url;
                            </script>
                        }
                    </div>
                </div>
            </div>
            <div class="col-sm-1">
                <div class="panel panel-primary" id="arte" style=" display:none; width:150px; height: 450px; ">
                    <div class="panel-heading">
                        <h4>ART</h4>
                    </div>
                    <p class="tImagen">STYLE IMAGE</p>
                    <br />
                    <img id="imagenArte" class="center" />
                    <br />
                    <br />
                    <p class="tImagen">PNL IMAGE</p>
                    <br />
                    <img id="imagenPNL" class="center" />
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row" style="display:none;" id="panelPacking">
            <div class="col-sm-11">
                <div class="panel panel-primary" id="consultaTalla" style="visibility:hidden; width: 100%; height: 1500px;">
                    <div class="panel-heading">
                        <h4>PACKING</h4>
                    </div>
                    <div id="packBPPK">
                        <div class="container-fluid" style=" overflow:auto;">
                            <br />
                            <div id="div_Desc_Estilo" style="background-color:lightblue; text-align:center"></div>
                            <div id="titulo_Tipo_Empaque" style="display:none; text-align:center"></div> <br />
                            <div id="botonesPackingcente" style="display:inline; text-align:center">
                                @if ((int)Session["idCargo"] == 10 || (int)Session["idCargo"] == 1)
                                {
                                    <button type="button" class="btn btn-success btn-md pull-right " id="changePack" onclick="event.preventDefault(); ConfirmCambioPack(this);"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Change Pack</button>
                                    <button type="button" class="btn btn-success btn-md pull-right " id="editarBPPack" onclick="event.preventDefault(); ConfirmEditarBPPack(this);"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit Pack</button>
                                    <button type="button" class="btn btn-success btn-md pull-right " id="crearPackPPK" onclick="event.preventDefault(); ConfirmAgregarPack(this);"><span class="glyphicon glyphicon-check" aria-hidden="true"></span> Add Pack</button>
                                    <button type="button" class="btn btn-success btn-md pull-right " id="crearPackBulks" onclick="event.preventDefault(); ConfirmAgregarBulksPack(this);"><span class="glyphicon glyphicon-check" aria-hidden="true"></span> Add Pack</button>
                                    <button type="button" class="btn btn-success btn-md pull-right " id="modificarPack" onclick="event.preventDefault(); ConfirmModifyQty(this);"><span class="glyphicon glyphicon-check" aria-hidden="true"></span> Modify 1rst Qty</button>
                                    <button type="button" class="btn btn-danger btn-md pull-right btnEliminarPackBP" id="eliminarPackBP" onclick="event.preventDefault(); ConfirmEliminarPackBP(this);"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete Pack</button>
                                }
                            </div>
                            <div></div>
                            <div></div>
                            <div id="div_estilo"></div>
                            <button type="button" id="btnAdd" class="btn btn-xs btn-primary classAddQ">+ Add Size</button>
                            <br />
                            <div id="listaTalla">
                                <table id="tableQtySize" class="table table-sm table-striped table-hover ">
                                    <thead>
                                        <tr>
                                            <th>Size</th>
                                            <th>1rst QTY</th>
                                        </tr>
                                    </thead>
                                    <tbody class="tbodyQtyTall"></tbody>
                                </table>
                            </div>
                            <button type="button" id="nuevaTalla" class="btn btn-success btn-md pull-right btn-sm">Save Sizes</button>
                            <br />
                            <div style="width: 100%; height:400px; overflow:auto;" id="tablaPackingCant">
                                <table id="tablePacking" class="table table-sm table-striped table-hover ">
                                    <thead class="encabezado"></thead>
                                    <tbody class="tbodyP"></tbody>
                                </table>
                            </div>

                        </div>
                        <div id="panelNoEstilosBPPK" style="display:none;">
                            @{
                                string[] imgsB = { "~/Content/img/iconoEmpaque.png" };
                            }

                            @foreach (var imgB in imgsB)
                            {
                                <img src="@Url.Content(imgB)" alt="tbd" id="imgPanelBPPK" class="centerImg" />
                                <p style="font-size:180%; text-align:center;">
                                    At the moment, there is no registered packaging for order.
                                </p>
                            }
                        </div>
                        <div class="container-fluid">
                            <div id="div_titulo" style="display:none; "></div>

                            @if ((int)Session["idCargo"] == 15)
                            {
                                <div id="listaTallaBatch" style=" overflow:auto; height: 200px; display:none;"></div>
                            }
                            else if ((int)Session["idCargo"] == 0 || Session["idCargo"] == null)
                            {
                                <script type="text/javascript">
								var url = '@Url.Action("Login", "Login")';
								window.location.href = url;
                                </script>
                            }
                            else
                            {
                                <div id="listaTallaBatch" style=" overflow:auto; height: 120px; display:none;"></div>
                            }
                            <div id="opciones" style="display:none; ">
                                <div class="form-row">
                                    <div class="form-group col-sm-4 tipoP">
                                        @Html.LabelFor(model => model.Packing.PackingTypeSize.TipoEmpaque, htmlAttributes: new { @class = "control-label " })
                                        @Html.EnumDropDownListFor(model => model.Packing.PackingTypeSize.TipoEmpaque, "Select a type of packaging", new { @class = "form-control"/*, @onchange = "ObtenerTallasPorTipo(this);"*/})
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TipoEmpaque, "", new { @class = "text-danger" })

                                        @Html.EditorFor(model => model.Packing.PackingTypeSize.NombreTipoPak, new { htmlAttributes = new { @class = "form-control txtDes" } })
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NombreTipoPak, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-3" id="opcionNumeroPPKs" style="display:none; ">

                                        @Html.LabelFor(model => model.Packing.PackingTypeSize.NumberPKK, htmlAttributes: new { @class = "control-label " })
                                        @Html.EditorFor(model => model.Packing.PackingTypeSize.NumberPKK, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NumberPKK, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-5" id="opcionNombre" style="display:none; ">
                                        @Html.LabelFor(model => model.Packing.PackingTypeSize.NombrePacking, htmlAttributes: new { @class = "control-label " })
                                        @Html.EditorFor(model => model.Packing.PackingTypeSize.NombrePacking, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.NombrePacking, "", new { @class = "text-danger" })
                                        <br />
                                    </div>
                                    <div class="col-sm-5" id="opcionNombreBulk" style="display:none; ">
                                        @Html.LabelFor(model => model.Packing.PackingTypeSize.PackingNameBulk, htmlAttributes: new { @class = "control-label " })
                                        @Html.EditorFor(model => model.Packing.PackingTypeSize.PackingNameBulk, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.PackingNameBulk, "", new { @class = "text-danger" })
                                        <br />
                                    </div>
                                </div>

                            </div>
                            <div class="form-row">
                                <br /><br />
                                <div class="form-group col-sm-12 tipoP">
                                    <button type="button" id="btnAddP" class="btn btn-xs btn-primary classAdd">+ Add Size</button>
                                </div>
                            </div>

                            <br />
                            <!--TABLA DE REGISTRO TIPO DE EMPAQUE DE PIEZAS BULK-->
                            <table class="table" id="tablaTallasBulkPcs">
                                <thead>	<tr><th>Size</th><th>Pieces#</th></tr></thead>
                                <tbody class="tbodyTallaBulkPcs"></tbody>
                            </table>
                            <!--TABLA DE REGISTRO TIPO DE EMPAQUE DE RATIO PPK-->
                            <table class="table" id="tablaTallasPPKRatio">
                                <thead>	<tr><th>Size</th><th>Ratio</th></tr></thead>
                                <tbody class="tbodyTallaPPKRatio"></tbody>
                            </table>
                            <!--TABLA DE REGISTRO TIPO DE EMPAQUE DE RATIO VARIOS PPKS-->
                            <table class="table" id="tablaTallasVariosPPKRatio">
                                <thead>	<tr><th>Size</th><th>Qty</th><th>Ratio</th></tr></thead>
                                <tbody class="tbodyTallaVariosPPKRatio"></tbody>
                            </table>
                            <!--TABLA DE REGISTRO TIPO DE EMPAQUE DE VARIOS BULKS-->
                            <table class="table" id="tablaTallasVariosBulks">
                                <thead>	<tr><th>Size</th><th>Pieces#</th></tr></thead>
                                <tbody class="tbodyTallaVariosBulks"></tbody>
                            </table>

                            <div id="listaTallaP"></div>
                            <br />
                            <br />
                            <br />
                            <div class="btn-toolbar pull-right" role="toolbar" id="botones" aria-label="Toolbar with button groups" style="display:none; ">
                                <div class="btn-group mr-2" role="group" aria-label="First group">
                                    <button type="button" id="btnAddDone" class="btn btn-success">Done</button>
                                </div>
                                <div class="btn-group mr-2" role="group" aria-label="Second group">
                                    <button type="button" id="botonAddNuevoPPK" class="btn btn-success" onclick="event.preventDefault(); ConfirmAddPPK(this);">+ New PPK</button>
                                </div>
                            </div>
                            <div class="btn-toolbar pull-right" role="toolbar" id="botonesBulk" aria-label="Toolbar with button groups" style="display:none; ">
                                <div class="btn-group mr-2" role="group" aria-label="First group">
                                    <button type="button" id="btnAddDoneBulk" class="btn btn-success">Done</button>
                                </div>
                                <div class="btn-group mr-2" role="group" aria-label="Second group">
                                    <button type="button" id="botonAddNuevoBulk" class="btn btn-success" onclick="event.preventDefault(); ConfirmAddBulk(this);">+ New Bulk</button>
                                </div>
                            </div>
                            <div id="div_estilo_pack" style="display:none;"></div>
                            <div id="nuevoBatch" style="display:none;">
                                <button type="button" class="btn btn-primary" id="registrarNuevo" data-toggle="modal">
                                    <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> ADD NEW BATCH
                                </button>
                                <br />
                                <br />
                            </div>
                            <div id="opcSelectPackPPK" style="display:none;">
                                <br />
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.PackingRegistradoPPK, htmlAttributes: new { @class = "control-label " }) <br />
                                @Html.DropDownList("listPacks", (IEnumerable<System.Web.Mvc.SelectListItem>)ViewData["listPacks"], "Select Packing Name", new { @class = "form-control", @id = "selectPackingNamePPK", @name = "state", @style = "width: 15% !important;" })
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.PackingRegistradoPPK, "", new { @class = "text-danger" })
                            </div>
                            <div id="opcSelectPackBULKS" style="display:none;">
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.PackingRegistradoVariosBULKS, htmlAttributes: new { @class = "control-label " }) <br />
                                @Html.DropDownList("listPacksName", (IEnumerable<System.Web.Mvc.SelectListItem>)ViewData["listPacksName"], "Select Packing Name", new { @class = "form-control", @id = "selectPackingNameVariosBULKS", @name = "state", @style = "width: 15% !important;" })
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.PackingRegistradoVariosBULKS, "", new { @class = "text-danger" })
                            </div>
                            <div id="opcionesPack" style="display:none;">
                                <div class="container-fluid">
                                    <div class="row">
                                        <div class="col-xs-4 col-md-4" style="width: 200px;">
                                            @Html.LabelFor(model => model.Packing.TotalCartonsPPK, htmlAttributes: new { @class = "control-label lTotCartPPK " })
                                            @Html.EditorFor(model => model.Packing.TotalCartonsPPK, new { htmlAttributes = new { @class = "form-control numeric cantTotCart", @style = "width:150px", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Packing.TotalCartonsPPK, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <br />
                            <div id="listaTallaPacking" style="width: 100%; height:400px; overflow:auto;"></div>

                        </div>
                    </div>
                    <div id="packAssort">
                        <div id="panelNoEstilos" style="display:none;">
                            @{
                                string[] imgs = { "~/Content/img/iconoEmpaque.png" };
                            }

                            @foreach (var img in imgs)
                            {
                                <img src="@Url.Content(img)" alt="tbd" id="imgPanel" class="centerImg" />
                                <p style="font-size:180%; text-align:center;">
                                    At the moment, there is no registered packaging for order.
                                </p>
                            }
                        </div>
                        <script src="~/Scripts/general/obtenerListadoPackingAssortTrims.js"></script>
                        <br />
                        <button type="button" class="btn btn-danger btn-md  btnEliminarPackHT" id="eliminarPackAssort" onclick="event.preventDefault(); ConfirmEliminarPackAssort(this);"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete Pack</button>
                        <button type="button" class="btn btn-success btn-md pull-left" id="agregarNuevoPack" onclick="event.preventDefault(); ConfirmNewAssort(this);"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> New Packing</button>
                        <div class="container-fluid" style=" overflow:auto;">
                            <br />
                            <div id="div_titulo_Assort"></div>
                            <div class="row" id="opcionesAssort" style="display:none; ">

                                <div class="col-xs-6 col-md-4" style="width: 300px;">
                                    @Html.LabelFor(model => model.IdEstilo, htmlAttributes: new { @class = "control-label " }) <br />
                                    @Html.DropDownList("listEstilo", (IEnumerable<System.Web.Mvc.SelectListItem>)ViewData["listEstilo"], "Select Style", new { @class = "form-control", @id = "selectEstilos", @name = "state", @style = "width: 80% !important;" })
                                    @Html.ValidationMessageFor(model => model.IdEstilo, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 300px;">
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.PackingName, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.PackingName, new { htmlAttributes = new { @class = "form-control", @style = "width: 60% !important;" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.PackingName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 300px;">
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.AssortName, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.AssortName, new { htmlAttributes = new { @class = "form-control", @style = "width: 62% !important;" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.AssortName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 150px;">
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.Cantidad, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.Cantidad, new { htmlAttributes = new { @class = "form-control numeric tpieces", @style = "width:130px", @onkeyup = "sumar();" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.Cantidad, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 150px;">
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.Cartones, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.Cartones, new { htmlAttributes = new { @class = "form-control numeric tcart", @style = "width:130px", @onkeyup = "sumar();" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.Cartones, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 150px;">
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.TotalUnits, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.TotalUnits, new { htmlAttributes = new { @class = "form-control numeric tcu", @style = "width:130px", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TotalUnits, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div id="div_titulo_Registro" style="display:none; "></div>
                            <div id="opcionesPAssort" style="display:none;">
                                <br />
                                @Html.LabelFor(model => model.Packing.PackingTypeSize.PackingRegistrado, htmlAttributes: new { @class = "control-label " }) <br />
                                @Html.DropDownList("listPack", (IEnumerable<System.Web.Mvc.SelectListItem>)ViewData["listPack"], "Select Packing Name", new { @class = "form-control", @id = "selectPackingName", @name = "state", @style = "width: 15% !important;" })
                                @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.PackingRegistrado, "", new { @class = "text-danger" })

                                @if (/*(int)Session["idCargo"] == 10 ||*/ (int)Session["idCargo"] == 1)
                                {
                                    <button type="button" class="btn btn-success btn-md pull-right " id="addPackAssort" onclick="event.preventDefault(); ConfirmAddPack(this);"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Add Pack</button>
                                    <button type="button" class="btn btn-success btn-md pull-right " id="editarPackAssort" onclick="event.preventDefault(); ConfirmEditarPackHT(this);"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit Pack</button>
                                }
                            </div>
                            <br />
                            <br />
                            <table class="table" id="tablaTallasAssortReg" style="width: 100%; height:100px; overflow:auto;">
                                <thead><tr><th>Size</th> <th>Ratio</th> <th>Pieces</th><th></th></tr></thead>
                                <tbody class="tbodyRegAssortment"></tbody>
                            </table>
                            <div id="tablaAssortBatch" style="width: 100%; height:200px; overflow:auto;">
                                <div id="regAssort"></div>

                                <!-- <div id="lTallasAssort" style=" overflow:auto; display:none; ">
                <div id="div_titulo_Tallas_assort"></div>
                <table id="listadoTallasAssort" class="table table-sm table-striped table-hover ">
                    <thead class="encabezado"></thead>
                    <tbody class="tbodyTallasAssort"></tbody>
                </table>
            </div>-->
                            </div>
                            <div id="batch" style="overflow:auto; display:none; ">
                                <div id="div_batch_assort"></div>
                                <div id="listaBatchAssort" style="width: 100%; height:200px; overflow:auto;"></div>
                            </div>
                            <div id="palletAssort"></div>
                            <div id="div_titulo_Register_pallet" style=" overflow:auto; display:none; "></div>
                            <div class="form-row" id="opcionesRegPallet" style="display:none;  margin-right: 0px; ">
                                <div class="col-xs-5 col-md-4 turn" style="width: 300px;">
                                    @Html.LabelFor(model => model.Packing.PackingAssort.Turnos, htmlAttributes: new { @class = "control-label " })
                                    @Html.EnumDropDownListFor(model => model.Packing.PackingAssort.Turnos, "Select Shift", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingAssort.Turnos, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 300px;">
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.TotalCartones, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.TotalCartones, new { htmlAttributes = new { @class = "form-control", id = "numeroTotalCart", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TotalCartones, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 300px;">
                                    @Html.LabelFor(model => model.Packing.PackingAssort.TotalCartonesFalt, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingAssort.TotalCartonesFalt, new { htmlAttributes = new { @class = "form-control", id = "numeroTotalFaltCart", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingAssort.TotalCartonesFalt, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 300px;">
                                    @Html.LabelFor(model => model.Packing.PackingAssort.TotalPiezasFalt, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingAssort.TotalPiezasFalt, new { htmlAttributes = new { @class = "form-control tcFalt", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingAssort.TotalPiezasFalt, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 300px;">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.PackingAssort.CantCartons, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingAssort.CantCartons, new { htmlAttributes = new { @class = "form-control numeric cantCartons", @onkeyup = "sumarAssort();" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingAssort.CantCartons, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 300px;">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.Pieces, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.Pieces, new { htmlAttributes = new { @class = "form-control cantTPcs", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.Pieces, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-4 col-md-4" style="width: 300px;">
                                    <br />
                                    @Html.LabelFor(model => model.Packing.PackingAssort.TotalPiezas, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingAssort.TotalPiezas, new { htmlAttributes = new { @class = "form-control totalPcs", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingAssort.TotalPiezas, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <br />
                            <div class="form-row" id="opcionesCantidadesPack" style="display:none;  margin-right: 0px; ">

                                <div class="col-sm-4 turn" style="margin-right: -130px;">
                                    @Html.LabelFor(model => model.Packing.PackingTypeSize.TotalCartones, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingTypeSize.TotalCartones, new { htmlAttributes = new { @class = "form-control", id = "nTotalCart", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingTypeSize.TotalCartones, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4" style="margin-right: -100px;">
                                    @Html.LabelFor(model => model.Packing.PackingAssort.TotalCartonesFalt, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingAssort.TotalCartonesFalt, new { htmlAttributes = new { @class = "form-control", id = "nTotalFaltCart", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingAssort.TotalCartonesFalt, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4" style="margin-right:-100px;">
                                    @Html.LabelFor(model => model.Packing.PackingAssort.TotalPiezasFalt, htmlAttributes: new { @class = "control-label " })
                                    @Html.EditorFor(model => model.Packing.PackingAssort.TotalPiezasFalt, new { htmlAttributes = new { @class = "form-control tcFalt", id = "nTotalPcsFalt", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Packing.PackingAssort.TotalPiezasFalt, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <button type="button" id="nuevoPalletAssort" class="btn btn-success btn-md pull-right btn-sm"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Pallet</button>

                        </div>
                    </div>
                    @if ((int)Session["idCargo"] == 15)
                    {
                        <div class="pies-container" id="containerPie">
                            <div id="pie"></div>
                        </div>
                    }
                    else if ((int)Session["idCargo"] == 0 || Session["idCargo"] == null)
                    {
                        <script type="text/javascript">
								var url = '@Url.Action("Login", "Login")';
								window.location.href = url;
                        </script>
                    }
                </div>
            </div>
            <div class="col-sm-1">
                <div class="panel panel-primary" id="arte" style=" display:none; width:150px; height: 450px; ">
                    <div class="panel-heading">
                        <h4>ART</h4>
                    </div>
                    <p class="tImagen">STYLE IMAGE</p>
                    <br />
                    <img id="imagenArte" class="center" />
                    <br />
                    <br />
                    <p class="tImagen">PNL IMAGE</p>
                    <br />
                    <img id="imagenPNL" class="center" />
                </div>
            </div>
        </div>

    }
    <br />
    <br />
    <br />
    <a href='@Url.Action("Index", "Packing")'>
        <img src='@Url.Content("~/Content/img/backToPage.png")' id="flecha" title="Go Back" />
    </a>
</div>
<script type="text/javascript" src="~/Scripts/general/desplazGeneral.js"></script>
<script>
    $(document).ready(function () {
        $("#search").keyup(function () {
            _this = this;
            // Show only matching TR, hide rest of them
            $.each($("#tabless tbody tr"), function () {
                if ($(this).text().toLowerCase().indexOf($(_this).val().toLowerCase()) === -1)
                    $(this).hide();
                else
                    $(this).show();
            });
        });
    });

    function obtenerListaPacking(IdEstiloInf) {
        var orders = new DevExpress.data.CustomStore({
            loadMode: "raw",
            load: function (loadOptions) {
                var d = $.Deferred();
                $.ajax({
                    url: "/Packing/Info_Packing_Grafica/" + parseInt(IdEstiloInf),
                    type: "POST",
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    success: function (jsonData) {
                        debugger
                        var lista_tallas = jsonData.Data.listaTalla;

                        d.resolve(lista_tallas);

                    },
                    error: function (e) {
                        alert("error: " + e.responseText);
                    }
                });
                return d.promise();
            },
            update: function (key, values) {

            }
        });


        var legendSettings = {
            orientation: "horizontal",
            itemTextPosition: "right",
            horizontalAlignment: "center",
            verticalAlignment: "bottom",
            rowCount: 2,
            columnCount: 5,
            font: {
                size: 20
            }
        },
            seriesOptions = [{
                argumentField: "Talla",
                valueField: "Porcentaje",
                label: {
                    visible: true, format: {
                        type: "fixedPoint",
                        precision: 1
                    },
                    font: {
                        size: 20
                    },
                    connector: {
                        visible: true,
                        width: 0.5
                    },
                    position: "columns",
                    customizeText: function (arg) {
                        return arg.argumentText + " ( " + arg.valueText + " %)";
                    }
                }
            }],
            sizeGroupName = "piesGroup";

        $("#pie").dxPieChart({
            dataSource: orders,
            sizeGroup: sizeGroupName,
            palette: "bright",
            title: "PACKING SIZES",
            legend: legendSettings,
            series: seriesOptions
        });
    }

    function obtenerListaPackingHT(IdEstiloInf) {
        var orders = new DevExpress.data.CustomStore({
            loadMode: "raw",
            load: function (loadOptions) {
                var d = $.Deferred();
                $.ajax({
                    url: "/Packing/Info_PackingHT_Grafica/" + parseInt(IdEstiloInf),
                    type: "POST",
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    success: function (jsonData) {
                        debugger
                        var lista_tallas = jsonData.Data.listaTalla;

                        d.resolve(lista_tallas);

                    },
                    error: function (e) {
                        alert("error: " + e.responseText);
                    }
                });
                return d.promise();
            },
            update: function (key, values) {

            }
        });


        var legendSettings = {
            orientation: "horizontal",
            itemTextPosition: "right",
            horizontalAlignment: "center",
            verticalAlignment: "bottom",
            rowCount: 2,
            columnCount: 5,
            font: {
                size: 20
            }
        },
            seriesOptions = [{
                argumentField: "Talla",
                valueField: "Porcentaje",
                label: {
                    visible: true, format: {
                        type: "fixedPoint",
                        precision: 1
                    },
                    font: {
                        size: 20
                    },
                    connector: {
                        visible: true,
                        width: 0.5
                    },
                    position: "columns",
                    customizeText: function (arg) {
                        return arg.argumentText + " ( " + arg.valueText + " %)";
                    }
                }
            }],
            sizeGroupName = "piesGroup";

        $("#pieht").dxPieChart({
            dataSource: orders,
            sizeGroup: sizeGroupName,
            palette: "bright",
            title: "PACKING SIZES",
            legend: legendSettings,
            series: seriesOptions
        });
    }

    /* $(document).on('click', '.btnEdit', function () {
        var id = $(this).data("value");
        $("#ContenedorEditarModal").load("/Packing/EditarPack/" + id, function () {
            $("#IdItems").val(id);
            $("#editarPackModal").modal("show");
        });
    });*/

    function ConfirmAddPack() {
        var id = $(this).data("value");
        $("#addPackModal").modal("show");
    }

    function ConfirmAgregarPack() {
        var id = $(this).data("value");
        $("#Packing_PackingTypeSize_NombrePackingPPKs").val('PACK-');
        $("#opcionesPPK").css("display", "inline");
        $("#opcionNumeroVariosPPKs").css("display", "inline");
        $("#opcionNombreVarios").css("display", "inline");
        $("#addPackPPKModal").modal("show");
    }

    function ConfirmAgregarBulksPack() {
        var id = $(this).data("value");
        $("#Packing_PackingTypeSize_NombrePackingAddBulks").val('PACK-');
        $("#opcionesBulks").css("display", "inline");
        $("#opcionNombreVariosBulksAdd").css("display", "inline");
        $("#editarBPPack").css("display", "inline"); 
        $("#addPackBulksModal").modal("show");
    }

    function ConfirmEditarBPPack() {
        var id = $(this).data("value");

        $("#editarPackBPModal").modal("show");
    }

    function ConfirmEliminarPackHT() {
		   var id = $("#InfoSummary_IdItems").val();
            alertify.confirm("Are you sure you want to delete the packing instruction ?", function (result) {
                $.ajax({
                    url: '/Packing/EliminarInstruccionPacking/' ,
                    data: "{'id':'" + id + "'}",
                    dataType: 'json',
                    contentType: 'application/json',
                    type: 'post',
                    success: function () {
                        window.location.reload();
                    }
                });
            },
                function () {
                    $("#loading").css('display', 'none');
                    window.location.reload();
                }).set({
                    title: "Confirmation"
                });
    }

    function ConfirmEliminarPackAssort() {
			var id = $("#IdPedido").val();
			//var content = $("#opcionesPackAssort").html();
			
			//var namePack;
			var confirm = alertify.confirm("Are you sure you want to delete the packing instruction ?", function (result) {
				
				//namePack = $("#selectPackingNameAssort option:selected").val();

				$.ajax({
					url: '/Packing/EliminarInstruccionPackingAssort/',
					data: "{'id':'" + id + "'}",
				//	data: "{'id':'" + id + "','packName':'" + namePack + "'}",
					dataType: 'json',
					contentType: 'application/json',
					type: 'post',
					success: function () {
						window.location.reload();
					}
				});

			},
				function () {
					$("#loading").css('display', 'none');
					window.location.reload();
				});/*.set({
                    title: "Are you sure you want to delete the packing instruction ?"
				}).setContent(content).showModal(); */
		
	}

    		function ConfirmEliminarPackBP() {
		   var id = $("#InfoSummary_IdItems").val();
            alertify.confirm("Are you sure you want to delete the packing instruction ?", function (result) {
                $.ajax({
                    url: '/Packing/EliminarInstruccionPacking/' ,
                    data: "{'id':'" + id + "'}",
                    dataType: 'json',
                    contentType: 'application/json',
                    type: 'post',
                    success: function () {
                        window.location.reload();
                    }
                });
            },
                function () {
                    $("#loading").css('display', 'none');
                    window.location.reload();
                }).set({
                    title: "Confirmation"
                });
	}

    function ConfirmEditarPackHT() {
        // var id = $(this).data("value");
        var id = $("#InfoSummary_IdItems").val();
        alertify.confirm("Are you sure you edit packing ?", function (result) {
            //var id = $(this).data("value");
            // var link = '';
            // link = link.replace("id", id);
            /* $.ajax({
                 url: '/Packing/EditarPack/'+ parseInt(id),
                 dataType: 'json',
                 contentType: 'application/json',
                 type: 'get',
                 success: function () {
                     window.location.reload();
                 }
             });*/


            $("#editarPackModal").modal("show");

        },
            function () {
                $("#loading").css('display', 'none');
                window.location.reload();
            }).set({
                title: "Confirmation"
            });
    }

    $(document).on("click", ".btnCancel", function () {
        window.location.reload();
        $("#loading").css('display', 'inline');
    });
</script>
